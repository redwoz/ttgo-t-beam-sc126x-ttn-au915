diff -Naru '--exclude=.git' ../basicmac.orig/src/hal/target-config.h ./src/hal/target-config.h
--- ../basicmac.orig/src/hal/target-config.h	2021-08-25 21:53:33.429169893 +1000
+++ ./src/hal/target-config.h	2021-08-25 21:54:52.912157381 +1000
@@ -34,12 +34,12 @@
 // then select the right region at runtime using os_getRegion() and/or
 // LMIC_reset_ex().
 #if !defined(CFG_eu868) && !defined(CFG_us915)
-#define CFG_eu868 1
+//#define CFG_eu868 1
 //#define CFG_us915 1
 //#define CFG_as923 1
 //#define CFG_il915 1
 //#define CFG_kr920 1
-//#define CFG_au915 1
+#define CFG_au915 1
 #endif // !defined(CFG_eu868) && !defined(CFG_us915)
 
 #define CFG_autojoin
diff -Naru '--exclude=.git' ../basicmac.orig/examples/basicmac-abp/basicmac-abp.ino ./examples/basicmac-abp/basicmac-abp.ino
--- ../basicmac.orig/examples/basicmac-abp/basicmac-abp.ino	2021-08-25 21:53:33.429169893 +1000
+++ ./examples/basicmac-abp/basicmac-abp.ino	2021-08-25 21:54:52.912157381 +1000
@@ -229,6 +203,16 @@
     LMIC_setSession (0x1, DEVADDR, NWKSKEY, APPSKEY);
     #endif
 
+    // First, disable channels 0-7
+    for (int channel=0; channel<8; ++channel) {
+      LMIC_disableChannel(channel);
+    }
+    // Now, disable channels 16-72 (is there 72 ??)
+    for (int channel=16; channel<72; ++channel) {
+       LMIC_disableChannel(channel);
+    }
+    // This means only channels 8-15 are up
+
     #if defined(CFG_eu868)
     // These are defined by the LoRaWAN specification
     enum {
diff -Naru '--exclude=.git' ../basicmac.orig/target/arduino/hal/hal.cpp ./src/hal/hal.cpp
--- ../basicmac.orig/target/arduino/hal/hal.cpp	2021-11-01 23:54:10.873635293 +1100
+++ ./src/hal/hal.cpp	2021-11-01 23:51:05.115284759 +1100
@@ -39,6 +39,8 @@
 #include "../basicmac.h"
 #include "hal.h"
 
+SPIClass xSPI;
+
 // Datasheet defins typical times until busy goes low. Most are < 200us,
 // except when waking up from sleep, which typically takes 3500us. Since
 // we cannot know here if we are in sleep, we'll have to assume we are.
@@ -190,14 +192,15 @@
 static const SPISettings settings(10E6, MSBFIRST, SPI_MODE0);
 
 static void hal_spi_init () {
-    SPI.begin();
+    xSPI = SPIClass(HSPI);
+    xSPI.begin(5, 19, 27, 18);
 }
 
 void hal_spi_select (int on) {
     if (on)
-        SPI.beginTransaction(settings);
+        xSPI.beginTransaction(settings);
     else
-        SPI.endTransaction();
+        xSPI.endTransaction();
 
     //Serial.println(val?">>":"<<");
     digitalWrite(lmic_pins.nss, !on);
@@ -205,7 +208,7 @@
 
 // perform SPI transaction with radio
 u1_t hal_spi (u1_t out) {
-    u1_t res = SPI.transfer(out);
+    u1_t res = xSPI.transfer(out);
 /*
     Serial.print(">");
     Serial.print(out, HEX);
